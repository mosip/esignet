name: Maven Package upon a push

on:
  release:
    types: [published]
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      message:
        description: 'Message for manually triggering'
        required: false
        default: 'Triggered for Updates'
        type: string
  push:
    branches:
      - '!release-branch'
      - master
      - 1.*
      - develop
      - MOSIP*
      - release*
      - ES-842

jobs:
  build_maven_esignet:
    uses: mosip/kattu/.github/workflows/maven-build.yml@master
    with:
      SERVICE_LOCATION: ./
      BUILD_ARTIFACT: esignet
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  check_snapshot_version:
    runs-on: ubuntu-latest
    outputs:
      is_condition: ${{ steps.check_output.outputs.is_condition }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check for -SNAPSHOT version in pom.xml files
        id: check_output
        shell: bash
        run: |
          # Initialize the flag that will hold the result
          condition_met=false
          echo "Initial condition_met: $condition_met"
          
          # Loop through each pom.xml file and check if -SNAPSHOT version is present in the parent block
          for pom_file in $(find . -name "pom.xml"); do
            echo "Processing $pom_file"
          
            # Extract the <parent> block from the pom.xml
            parent_block=$(awk '/<parent>/,/<\/parent>/' "$pom_file")
          
            # If there's no <parent> block, skip this file and move to the next one
            if [ -z "$parent_block" ]; then
              echo "No <parent> block found in $pom_file, skipping this file."
              continue
            fi
          
            # Debug: Print the entire parent block for verification
            echo "Checking the following parent block in $pom_file:"
            echo "$parent_block"
          
            # Extract the <version> field from the <parent> block
            version_in_parent=$(echo "$parent_block" | grep -oP '<version>\K.*(?=</version>)')
          
            # Debug the extracted version
            echo "Extracted version in $pom_file: $version_in_parent"
          
            # Check if the version contains '-SNAPSHOT'
            if [[ "$version_in_parent" == *"-SNAPSHOT"* ]]; then
              echo "Found '-SNAPSHOT' version in $pom_file."
              condition_met=true
              break # Stop checking further files once we find '-SNAPSHOT'
            else
              echo "No '-SNAPSHOT' version found in $pom_file."
            fi
          done
          
          # Debug the final condition_met value
          echo "Final condition_met value: $condition_met"
          
          # Set the output for the next step
          echo "::set-output name=is_condition::$condition_met"

      - name: Debug Condition Output
        run: |
          echo "Condition Met: ${{ steps.check_output.outputs.is_condition }}"

  publish_to_nexus:
    if: "${{ !contains(github.ref, 'master') && github.event_name != 'pull_request' }}"
    needs: build_maven_esignet
    uses: mosip/kattu/.github/workflows/maven-publish-to-nexus.yml@master
    with:
      SERVICE_LOCATION: ./
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_URL: ${{ secrets.OSSRH_SNAPSHOT_URL }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  sonar_analysis:
    needs: build_maven_esignet
    if: "${{  github.event_name != 'pull_request' }}"
    uses: mosip/kattu/.github/workflows/maven-sonar-analysis.yml@master
    with:
      SERVICE_LOCATION: ./
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      ORG_KEY: ${{ secrets.ORG_KEY }}
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build_dockers:
    needs: build_maven_esignet
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: 'esignet-service'
            SERVICE_NAME: 'esignet'
            BUILD_ARTIFACT: 'esignet'
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
      BUILD_ARTIFACT: ${{ matrix.BUILD_ARTIFACT }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build_maven_esignet_with_plugins:
    uses: mosip/kattu/.github/workflows/maven-build.yml@master
    with:
      SERVICE_LOCATION: ./esignet-with-plugins
      BUILD_ARTIFACT: esignet-with-plugins
      MAVEN_NON_EXEC_ARTIFACTS: "esignet-mock-plugin.jar,mosip-identity-plugin.jar,sunbird-rc-plugin.jar"
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build_dockers_esignet_with_plugins:
    needs: [build_maven_esignet_with_plugins, check_snapshot_version, publish_to_nexus]
    if: ${{ needs.check_snapshot_version.outputs.is_condition == 'true' }}
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: 'esignet-with-plugins'
            SERVICE_NAME: 'esignet-with-plugins'
            BUILD_ARTIFACT: 'esignet-with-plugins'
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
      BUILD_ARTIFACT: ${{ matrix.BUILD_ARTIFACT }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build_dockers_oidc_ui:
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: 'oidc-ui'
            SERVICE_NAME: 'oidc-ui'
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build_maven_apitest_esignet:
    uses: mosip/kattu/.github/workflows/maven-build.yml@master-java21
    with:
      SERVICE_LOCATION: ./api-test
      BUILD_ARTIFACT: apitest-esignet
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  publish_to_nexus_apitest_esignet:
    if: "${{ !contains(github.ref, 'master') && github.event_name != 'pull_request' && github.event_name != 'release' && github.event_name != 'prerelease' && github.event_name != 'publish' }}"
    needs: build_maven_apitest_esignet
    uses: mosip/kattu/.github/workflows/maven-publish-to-nexus.yml@master-java21
    with:
      SERVICE_LOCATION: ./api-test
    secrets:
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_URL: ${{ secrets.OSSRH_SNAPSHOT_URL }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build_apitest_esignet_local:
    needs: build_maven_apitest_esignet
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.dev_namespace_docker_hub }}
      SERVICE_NAME: apitest-esignet
      SERVICE_LOCATION: api-test
      BUILD_ARTIFACT: apitest-esignet-local
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Setup the settings file for ossrh server
        run: echo "<settings> <servers>  <server>  <id>ossrh</id>    <username>${{secrets.ossrh_user}}</username> <password>${{secrets.ossrh_secret}}</password> </server> </servers> <profiles> <profile>     <id>ossrh</id> <activation> <activeByDefault>true</activeByDefault> </activation>  <properties> <gpg.executable>gpg2</gpg.executable> <gpg.passphrase>${{secrets.gpg_secret}}</gpg.passphrase> </properties> </profile> <profile> <id>allow-snapshots</id>       <activation><activeByDefault>true</activeByDefault></activation> <repositories> <repository>        <id>snapshots-repo</id> <url>https://oss.sonatype.org/content/repositories/snapshots</url> <releases><enabled>false</enabled></releases> <snapshots><enabled>true</enabled></snapshots> </repository>  <repository>         <id>releases-repo</id>  <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>         <releases><enabled>true</enabled></releases>         <snapshots><enabled>false</enabled></snapshots> </repository> </repositories>  </profile> <profile> <id>sonar</id> <properties>  <sonar.sources>.</sonar.sources> <sonar.host.url>https://sonarcloud.io</sonar.host.url>  </properties> <activation> <activeByDefault>false</activeByDefault> </activation> </profile> </profiles> </settings>" > $GITHUB_WORKSPACE/settings.xml
      - name: Build Automationtests with Maven
        run: |
          cd ${{ env.SERVICE_LOCATION}}
          mvn clean package -s $GITHUB_WORKSPACE/settings.xml
      - name: Copy configuration files to target directory.
        run: |
          cp -r ${{ env.SERVICE_LOCATION}}/target/classes/config ${{ env.SERVICE_LOCATION}}/target/config
          cp -r ${{ env.SERVICE_LOCATION}}/testNgXmlFiles ${{ env.SERVICE_LOCATION}}/target/testNgXmlFiles
      - name: Ready the springboot artifacts
        if: ${{ !contains(github.ref, 'master') || !contains(github.ref, 'main') }}
        run: |
          ## FIND JARS & COPY ONLY EXECUTABLE JARs STORED UNDER TARGET DIRECTORY 
          find ${{ env.SERVICE_LOCATION }} -path '*/target/*' -exec zip ${{ env.BUILD_ARTIFACT }}.zip {} +
      - name: Upload the springboot jars
        if: ${{ !contains(github.ref, 'master') || !contains(github.ref, 'main') }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_ARTIFACT }}
          path: ${{ env.BUILD_ARTIFACT }}.zip
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure() # Pick up events even if the job fails or is canceled.

  build_dockers_apitest_esignet:
    needs: build_apitest_esignet_local
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: 'api-test'
            SERVICE_NAME: 'apitest-esignet'
            BUILD_ARTIFACT: 'apitest-esignet-local'
            ONLY_DOCKER: true
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master-java21
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
      BUILD_ARTIFACT: ${{ matrix.BUILD_ARTIFACT }}
      ONLY_DOCKER: ${{ matrix.ONLY_DOCKER }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
