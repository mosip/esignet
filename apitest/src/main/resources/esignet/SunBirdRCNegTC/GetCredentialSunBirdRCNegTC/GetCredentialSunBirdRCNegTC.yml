GetCredentialSunBirdRCNegTC:
   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Missing_Credential_Def_Type1_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "$REMOVE$"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Missing_Credential_Def_Type2_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "$REMOVE$"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Missing_Credential_Def_Types_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "$REMOVE$"}, {types: "$REMOVE$"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Invalid_Credential_Def_Type1_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "asfadf"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Invalid_Credential_Def_Type2_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "asfadf"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Invalid_Credential_Def_Types_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "asfadf"}, {types: "asgfdga"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Empty_Credential_Def_Type1_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: ""}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Empty_Credential_Def_Type2_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: ""}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Empty_Credential_Def_Types_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: ""}, {types: ""}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_SpaceVal_Credential_Def_Type1_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: " "}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_SpaceVal_Credential_Def_Type2_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: " "}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_SpaceVal_Credential_Def_Types_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: " "}, {types: " "}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "invalid_request"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Null_Credential_Def_Type1_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "null"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Null_Credential_Def_Type2_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "null"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_Null_Credential_Def_Types_Neg:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "null"}, {types: "null"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
        "error": "unsupported_credential_type"
}'

   ESignet_GetCredentialSunBirdRCNegTC_IdpAccessToken_all_Valid_Smoke:
      endPoint: $ESIGNETMOCKBASEURL$/v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTC
      outputTemplate: esignet/SunBirdRCNegTC/GetCredentialSunBirdRCNegTC/GetCredentialSunBirdRCNegTCResult
      input: '{
      	"client_id": "$ID:CreateOIDCClientV2SunBirdRC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenSunBirdRCNegTC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$"
}'
      output: '{
}'