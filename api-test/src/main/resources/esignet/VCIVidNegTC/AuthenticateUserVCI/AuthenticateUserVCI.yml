AuthenticateUserVCIVidNegTC:
   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen1_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen1_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen1_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen1_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen1_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen2_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen2_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen2_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen2_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen2_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen3_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen3_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen3_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen3_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen3_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen4_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen4_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen4_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen4_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen4_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_Diff_Scope_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_Diff_Scope_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_Diff_Scope_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_Diff_Scope_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_Diff_Scope_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen5_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid vid and invalid otp
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen5_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen5_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen5_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen5_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen6_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen6_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen6_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen6_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen6_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegAuthCodeScen7_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid auth-code
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen7_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen7_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen7_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegAuthCodeScen7_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegTokenScen1_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with invalid Token
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen1_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen1_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen1_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen1_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegTokenScen2_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid Token
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen2_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen2_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen2_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen2_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegTokenScen3_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid Token
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen3_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen3_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen3_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegTokenScen3_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_Hash_CodeChallenge_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with hash codeChallenge
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_Hash_CodeChallenge_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_Hash_CodeChallenge_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_Hash_CodeChallenge_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_Hash_CodeChallenge_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen1_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen1_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen1_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen1_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen1_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen2_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen2_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen2_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen2_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen2_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen3_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen3_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen3_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen3_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen3_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen4_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen4_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen4_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen4_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen4_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen5_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen5_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen5_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen5_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen5_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen6_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen6_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen6_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen6_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen6_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen7_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen7_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen7_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen7_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen7_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen8_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen8_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen8_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen8_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen8_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'

   ESignet_AuthenticateUserVCI_Vid_Otp_NegCredScen9_Valid_Smoke:
      endPoint: /v1/esignet/authorization/authenticate
      description: To Authenticate user VCI with different invalid credentials
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCI
      outputTemplate: esignet/VCIVidNegTC/AuthenticateUserVCI/AuthenticateUserVCIResultResult
      input: '{
        "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen9_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen9_Valid_Smoke_sid_transactionId$",
      	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
      	"authFactorType" : "OTP",
      	"challenge" : "$ID:AddIdentity_Valid_Params_VCI_Vid_Inv_Scen_smoke_Pos_EMAIL$",
        "sendOtp":{
    "encodedHash": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen9_Valid_Smoke_sid_encodedResp$",
    "requestTime": "$TIMESTAMP$",
    "transactionId": "$ID:OAuthDetailsRequest_VCI_Vid_NegCredScen9_Valid_Smoke_sid_transactionId$",
	"individualId": "$ID:Generate_Perpetual_VID_VCI_Invalid_Scen_Smoke_sid_vid$",
    "otpChannels": [{channel: "email"},{channel: "phone"}],
    "sendOtpReqTemplate": "esignet/SendOtp/SendOtp",
    "sendOtpEndPoint": "/v1/esignet/authorization/send-otp"
    }
    }'
      output: '{
  "sendOtpResp":{
        "maskedMobile": "$IGNORE$",
        "sendOtpResTemplate":"esignet/SendOtp/SendOtpResult",
        "maskedEmail": "$IGNORE$"
    }
}'