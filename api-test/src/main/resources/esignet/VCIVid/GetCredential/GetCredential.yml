GetCredentialVid:
   ESignet_GetCredential_Vid_IdpAccessToken_all_Valid_Smoke:
      endPoint: /v1/esignet/vci/credential
      description: Get credential with all valid details VID
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCIVid/GetCredential/GetCredential
      outputTemplate: esignet/VCIVid/GetCredential/GetCredentialResult
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_Vid_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOFJWT$"
}'
      output: '{
}'

   ESignet_GetCredential_Vid_IdpAccessToken_1stLang_all_Valid_Smoke:
      endPoint: /v1/esignet/vci/credential
      description: Get credential with all valid details using 1st mandatory language VID
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCI/GetCredential/GetCredential
      outputTemplate: esignet/VCI/GetCredential/GetCredentialResult
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_Vid_1stLang_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOFJWT$"
}'
      output: '{
}'

   ESignet_GetCredential_Vid_IdpAccessToken_2ndLang_all_Valid_Smoke:
      endPoint: /v1/esignet/vci/credential
      description: Get credential with all valid details using 2nd mandatory language VID
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCI/GetCredential/GetCredential
      outputTemplate: esignet/VCI/GetCredential/GetCredentialResult
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_Vid_2ndLang_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOFJWT$"
}'
      output: '{
}'

   ESignet_GetCredential_Vid_IdpAccessToken_2ndLang_Invalid_Token_Neg:
      endPoint: /v1/esignet/vci/credential
      description: Get credential with invalid token using 2nd mandatory language VID
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCI/GetCredential/GetCredential
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_Vid_2ndLang_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOFJWT$"
}'
      output: '{
      "error":"vci_exchange_failed"
}'